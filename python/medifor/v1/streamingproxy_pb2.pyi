# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from medifor.v1.analytic_pb2 import (
    Detection as medifor___v1___analytic_pb2___Detection,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class FileChunk(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name = ... # type: typing___Text
    mime_type = ... # type: typing___Text
    offset = ... # type: int
    total_bytes = ... # type: int
    value = ... # type: bytes

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        mime_type : typing___Optional[typing___Text] = None,
        offset : typing___Optional[int] = None,
        total_bytes : typing___Optional[int] = None,
        value : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FileChunk: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"mime_type",u"name",u"offset",u"total_bytes",u"value"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"mime_type",b"mime_type",u"name",b"name",u"offset",b"offset",u"total_bytes",b"total_bytes",u"value",b"value"]) -> None: ...

class DetectionChunk(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def detection(self) -> medifor___v1___analytic_pb2___Detection: ...

    @property
    def file_chunk(self) -> FileChunk: ...

    def __init__(self,
        *,
        detection : typing___Optional[medifor___v1___analytic_pb2___Detection] = None,
        file_chunk : typing___Optional[FileChunk] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DetectionChunk: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"detection",u"file_chunk",u"value"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"detection",u"file_chunk",u"value"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"detection",b"detection",u"file_chunk",b"file_chunk",u"value",b"value"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"detection",b"detection",u"file_chunk",b"file_chunk",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"value",b"value"]) -> typing_extensions___Literal["detection","file_chunk"]: ...
