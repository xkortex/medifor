# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.rpc.status_pb2 import (
    Status as google___rpc___status_pb2___Status,
)

from medifor.v1.analytic_pb2 import (
    ImageCameraMatch as medifor___v1___analytic_pb2___ImageCameraMatch,
    ImageCameraMatchRequest as medifor___v1___analytic_pb2___ImageCameraMatchRequest,
    ImageManipulation as medifor___v1___analytic_pb2___ImageManipulation,
    ImageManipulationRequest as medifor___v1___analytic_pb2___ImageManipulationRequest,
    ImageSplice as medifor___v1___analytic_pb2___ImageSplice,
    ImageSpliceRequest as medifor___v1___analytic_pb2___ImageSpliceRequest,
    VideoManipulation as medifor___v1___analytic_pb2___VideoManipulation,
    VideoManipulationRequest as medifor___v1___analytic_pb2___VideoManipulationRequest,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Fusion(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    start_time_millis = ... # type: int
    end_time_millis = ... # type: int

    @property
    def status(self) -> google___rpc___status_pb2___Status: ...

    @property
    def img_manip_req(self) -> FuseImageManipulationRequest: ...

    @property
    def vid_manip_req(self) -> FuseVideoManipulationRequest: ...

    @property
    def img_splice_req(self) -> FuseImageSpliceRequest: ...

    @property
    def img_cam_match_req(self) -> FuseImageCameraMatchRequest: ...

    @property
    def img_manip(self) -> medifor___v1___analytic_pb2___ImageManipulation: ...

    @property
    def vid_manip(self) -> medifor___v1___analytic_pb2___VideoManipulation: ...

    @property
    def img_splice(self) -> medifor___v1___analytic_pb2___ImageSplice: ...

    @property
    def img_cam_match(self) -> medifor___v1___analytic_pb2___ImageCameraMatch: ...

    def __init__(self,
        *,
        status : typing___Optional[google___rpc___status_pb2___Status] = None,
        start_time_millis : typing___Optional[int] = None,
        end_time_millis : typing___Optional[int] = None,
        img_manip_req : typing___Optional[FuseImageManipulationRequest] = None,
        vid_manip_req : typing___Optional[FuseVideoManipulationRequest] = None,
        img_splice_req : typing___Optional[FuseImageSpliceRequest] = None,
        img_cam_match_req : typing___Optional[FuseImageCameraMatchRequest] = None,
        img_manip : typing___Optional[medifor___v1___analytic_pb2___ImageManipulation] = None,
        vid_manip : typing___Optional[medifor___v1___analytic_pb2___VideoManipulation] = None,
        img_splice : typing___Optional[medifor___v1___analytic_pb2___ImageSplice] = None,
        img_cam_match : typing___Optional[medifor___v1___analytic_pb2___ImageCameraMatch] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Fusion: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"img_cam_match",u"img_cam_match_req",u"img_manip",u"img_manip_req",u"img_splice",u"img_splice_req",u"request",u"response",u"status",u"vid_manip",u"vid_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"end_time_millis",u"img_cam_match",u"img_cam_match_req",u"img_manip",u"img_manip_req",u"img_splice",u"img_splice_req",u"request",u"response",u"start_time_millis",u"status",u"vid_manip",u"vid_manip_req"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"img_cam_match",b"img_cam_match",u"img_cam_match_req",b"img_cam_match_req",u"img_manip",b"img_manip",u"img_manip_req",b"img_manip_req",u"img_splice",b"img_splice",u"img_splice_req",b"img_splice_req",u"request",b"request",u"response",b"response",u"status",b"status",u"vid_manip",b"vid_manip",u"vid_manip_req",b"vid_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"end_time_millis",b"end_time_millis",u"img_cam_match",b"img_cam_match",u"img_cam_match_req",b"img_cam_match_req",u"img_manip",b"img_manip",u"img_manip_req",b"img_manip_req",u"img_splice",b"img_splice",u"img_splice_req",b"img_splice_req",u"request",b"request",u"response",b"response",u"start_time_millis",b"start_time_millis",u"status",b"status",u"vid_manip",b"vid_manip",u"vid_manip_req",b"vid_manip_req"]) -> None: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"request",b"request"]) -> typing_extensions___Literal["img_manip_req","vid_manip_req","img_splice_req","img_cam_match_req"]: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"response",b"response"]) -> typing_extensions___Literal["img_manip","vid_manip","img_splice","img_cam_match"]: ...

class AnnotatedImageManipulation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id = ... # type: typing___Text
    version = ... # type: typing___Text

    @property
    def data(self) -> medifor___v1___analytic_pb2___ImageManipulation: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[typing___Text] = None,
        data : typing___Optional[medifor___v1___analytic_pb2___ImageManipulation] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AnnotatedImageManipulation: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"id",u"version"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"id",b"id",u"version",b"version"]) -> None: ...

class FuseImageManipulationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    want_masks = ... # type: bool

    @property
    def img_manip_req(self) -> medifor___v1___analytic_pb2___ImageManipulationRequest: ...

    @property
    def img_manip(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[AnnotatedImageManipulation]: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        out_dir : typing___Optional[typing___Text] = None,
        img_manip_req : typing___Optional[medifor___v1___analytic_pb2___ImageManipulationRequest] = None,
        img_manip : typing___Optional[typing___Iterable[AnnotatedImageManipulation]] = None,
        want_masks : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FuseImageManipulationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"img_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"img_manip",u"img_manip_req",u"out_dir",u"request_id",u"want_masks"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"img_manip_req",b"img_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"img_manip",b"img_manip",u"img_manip_req",b"img_manip_req",u"out_dir",b"out_dir",u"request_id",b"request_id",u"want_masks",b"want_masks"]) -> None: ...

class AnnotatedVideoManipulation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id = ... # type: typing___Text
    version = ... # type: typing___Text

    @property
    def data(self) -> medifor___v1___analytic_pb2___VideoManipulation: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[typing___Text] = None,
        data : typing___Optional[medifor___v1___analytic_pb2___VideoManipulation] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AnnotatedVideoManipulation: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"id",u"version"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"id",b"id",u"version",b"version"]) -> None: ...

class FuseVideoManipulationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    want_masks = ... # type: bool

    @property
    def vid_manip_req(self) -> medifor___v1___analytic_pb2___VideoManipulationRequest: ...

    @property
    def vid_manip(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[AnnotatedVideoManipulation]: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        out_dir : typing___Optional[typing___Text] = None,
        vid_manip_req : typing___Optional[medifor___v1___analytic_pb2___VideoManipulationRequest] = None,
        vid_manip : typing___Optional[typing___Iterable[AnnotatedVideoManipulation]] = None,
        want_masks : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FuseVideoManipulationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"vid_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"out_dir",u"request_id",u"vid_manip",u"vid_manip_req",u"want_masks"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"vid_manip_req",b"vid_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"out_dir",b"out_dir",u"request_id",b"request_id",u"vid_manip",b"vid_manip",u"vid_manip_req",b"vid_manip_req",u"want_masks",b"want_masks"]) -> None: ...

class AnnotatedImageSplice(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id = ... # type: typing___Text
    version = ... # type: typing___Text

    @property
    def data(self) -> medifor___v1___analytic_pb2___ImageSplice: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[typing___Text] = None,
        data : typing___Optional[medifor___v1___analytic_pb2___ImageSplice] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AnnotatedImageSplice: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"id",u"version"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"id",b"id",u"version",b"version"]) -> None: ...

class FuseImageSpliceRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    want_masks = ... # type: bool

    @property
    def img_splice_req(self) -> medifor___v1___analytic_pb2___ImageSpliceRequest: ...

    @property
    def img_splice(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[AnnotatedImageSplice]: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        out_dir : typing___Optional[typing___Text] = None,
        img_splice_req : typing___Optional[medifor___v1___analytic_pb2___ImageSpliceRequest] = None,
        img_splice : typing___Optional[typing___Iterable[AnnotatedImageSplice]] = None,
        want_masks : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FuseImageSpliceRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"img_splice_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"img_splice",u"img_splice_req",u"out_dir",u"request_id",u"want_masks"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"img_splice_req",b"img_splice_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"img_splice",b"img_splice",u"img_splice_req",b"img_splice_req",u"out_dir",b"out_dir",u"request_id",b"request_id",u"want_masks",b"want_masks"]) -> None: ...

class AnnotatedImageCameraMatch(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id = ... # type: typing___Text
    version = ... # type: typing___Text

    @property
    def data(self) -> medifor___v1___analytic_pb2___ImageCameraMatch: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[typing___Text] = None,
        data : typing___Optional[medifor___v1___analytic_pb2___ImageCameraMatch] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AnnotatedImageCameraMatch: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"id",u"version"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"id",b"id",u"version",b"version"]) -> None: ...

class FuseImageCameraMatchRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    want_masks = ... # type: bool

    @property
    def img_cam_match_req(self) -> medifor___v1___analytic_pb2___ImageCameraMatchRequest: ...

    @property
    def img_cam_match(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[AnnotatedImageCameraMatch]: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        out_dir : typing___Optional[typing___Text] = None,
        img_cam_match_req : typing___Optional[medifor___v1___analytic_pb2___ImageCameraMatchRequest] = None,
        img_cam_match : typing___Optional[typing___Iterable[AnnotatedImageCameraMatch]] = None,
        want_masks : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FuseImageCameraMatchRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"img_cam_match_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"img_cam_match",u"img_cam_match_req",u"out_dir",u"request_id",u"want_masks"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"img_cam_match_req",b"img_cam_match_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"img_cam_match",b"img_cam_match",u"img_cam_match_req",b"img_cam_match_req",u"out_dir",b"out_dir",u"request_id",b"request_id",u"want_masks",b"want_masks"]) -> None: ...
