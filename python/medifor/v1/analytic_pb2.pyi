# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.rpc.status_pb2 import (
    Status as google___rpc___status_pb2___Status,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ManipulationType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> ManipulationType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[ManipulationType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, ManipulationType]]: ...
    MANIP_UNKNOWN = typing___cast(ManipulationType, 0)
    MANIP_FILTER = typing___cast(ManipulationType, 1)
    MANIP_ADJUST_COLOR = typing___cast(ManipulationType, 2)
    MANIP_REMOVE = typing___cast(ManipulationType, 3)
    MANIP_CONTENT_AWARE_FILL = typing___cast(ManipulationType, 4)
    MANIP_PAINTBRUSH_TOOL = typing___cast(ManipulationType, 5)
    MANIP_PATCH_TOOL = typing___cast(ManipulationType, 6)
    MANIP_BLUR = typing___cast(ManipulationType, 7)
    MANIP_SPLICE = typing___cast(ManipulationType, 8)
    MANIP_CLONE = typing___cast(ManipulationType, 9)
    MANIP_CROP = typing___cast(ManipulationType, 10)
    MANIP_FLIP = typing___cast(ManipulationType, 11)
    MANIP_RESIZE = typing___cast(ManipulationType, 12)
    MANIP_SEAM_CARVING = typing___cast(ManipulationType, 13)
    MANIP_ROTATE = typing___cast(ManipulationType, 14)
    MANIP_SKEW = typing___cast(ManipulationType, 15)
    MANIP_WARP = typing___cast(ManipulationType, 16)
    MANIP_METADATA = typing___cast(ManipulationType, 17)
    MANIP_ANTIFORENSICS = typing___cast(ManipulationType, 18)
    MANIP_IMAGE_RECAPTURE = typing___cast(ManipulationType, 19)
    MANIP_CGI = typing___cast(ManipulationType, 20)
    MANIP_FRAME_INSERTION = typing___cast(ManipulationType, 21)
    MANIP_FRAME_DROP = typing___cast(ManipulationType, 22)
    MANIP_AUDIO = typing___cast(ManipulationType, 23)
    MANIP_DOUBLE_JPG = typing___cast(ManipulationType, 24)
    MANIP_OTHER = typing___cast(ManipulationType, 25)
MANIP_UNKNOWN = typing___cast(ManipulationType, 0)
MANIP_FILTER = typing___cast(ManipulationType, 1)
MANIP_ADJUST_COLOR = typing___cast(ManipulationType, 2)
MANIP_REMOVE = typing___cast(ManipulationType, 3)
MANIP_CONTENT_AWARE_FILL = typing___cast(ManipulationType, 4)
MANIP_PAINTBRUSH_TOOL = typing___cast(ManipulationType, 5)
MANIP_PATCH_TOOL = typing___cast(ManipulationType, 6)
MANIP_BLUR = typing___cast(ManipulationType, 7)
MANIP_SPLICE = typing___cast(ManipulationType, 8)
MANIP_CLONE = typing___cast(ManipulationType, 9)
MANIP_CROP = typing___cast(ManipulationType, 10)
MANIP_FLIP = typing___cast(ManipulationType, 11)
MANIP_RESIZE = typing___cast(ManipulationType, 12)
MANIP_SEAM_CARVING = typing___cast(ManipulationType, 13)
MANIP_ROTATE = typing___cast(ManipulationType, 14)
MANIP_SKEW = typing___cast(ManipulationType, 15)
MANIP_WARP = typing___cast(ManipulationType, 16)
MANIP_METADATA = typing___cast(ManipulationType, 17)
MANIP_ANTIFORENSICS = typing___cast(ManipulationType, 18)
MANIP_IMAGE_RECAPTURE = typing___cast(ManipulationType, 19)
MANIP_CGI = typing___cast(ManipulationType, 20)
MANIP_FRAME_INSERTION = typing___cast(ManipulationType, 21)
MANIP_FRAME_DROP = typing___cast(ManipulationType, 22)
MANIP_AUDIO = typing___cast(ManipulationType, 23)
MANIP_DOUBLE_JPG = typing___cast(ManipulationType, 24)
MANIP_OTHER = typing___cast(ManipulationType, 25)

class SpecificityType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> SpecificityType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[SpecificityType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, SpecificityType]]: ...
    SPEC_GLOBAL = typing___cast(SpecificityType, 0)
    SPEC_FRAME = typing___cast(SpecificityType, 1)
    SPEC_PIXEL = typing___cast(SpecificityType, 2)
    SPEC_METADATA = typing___cast(SpecificityType, 3)
SPEC_GLOBAL = typing___cast(SpecificityType, 0)
SPEC_FRAME = typing___cast(SpecificityType, 1)
SPEC_PIXEL = typing___cast(SpecificityType, 2)
SPEC_METADATA = typing___cast(SpecificityType, 3)

class DetectionStage(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> DetectionStage: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[DetectionStage]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, DetectionStage]]: ...
    DETECTION_STAGE_NONE = typing___cast(DetectionStage, 0)
    DETECTION_STAGE_QUEUED = typing___cast(DetectionStage, 1)
    DETECTION_STAGE_CLAIMED = typing___cast(DetectionStage, 2)
    DETECTION_STAGE_FINISHED = typing___cast(DetectionStage, 3)
DETECTION_STAGE_NONE = typing___cast(DetectionStage, 0)
DETECTION_STAGE_QUEUED = typing___cast(DetectionStage, 1)
DETECTION_STAGE_CLAIMED = typing___cast(DetectionStage, 2)
DETECTION_STAGE_FINISHED = typing___cast(DetectionStage, 3)

class DetectionStatus(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> DetectionStatus: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[DetectionStatus]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, DetectionStatus]]: ...
    DETECTION_STATUS_NONE = typing___cast(DetectionStatus, 0)
    DETECTION_STATUS_SUCCESS = typing___cast(DetectionStatus, 1)
    DETECTION_STATUS_FAILURE = typing___cast(DetectionStatus, 2)
DETECTION_STATUS_NONE = typing___cast(DetectionStatus, 0)
DETECTION_STATUS_SUCCESS = typing___cast(DetectionStatus, 1)
DETECTION_STATUS_FAILURE = typing___cast(DetectionStatus, 2)

class OptOutType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> OptOutType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[OptOutType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, OptOutType]]: ...
    OPT_OUT_NONE = typing___cast(OptOutType, 0)
    OPT_OUT_ALL = typing___cast(OptOutType, 1)
    OPT_OUT_DETECTION = typing___cast(OptOutType, 2)
    OPT_OUT_LOCALIZATION = typing___cast(OptOutType, 3)
OPT_OUT_NONE = typing___cast(OptOutType, 0)
OPT_OUT_ALL = typing___cast(OptOutType, 1)
OPT_OUT_DETECTION = typing___cast(OptOutType, 2)
OPT_OUT_LOCALIZATION = typing___cast(OptOutType, 3)

class VideoOptOutType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> VideoOptOutType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[VideoOptOutType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, VideoOptOutType]]: ...
    VIDEO_OPT_OUT_DETECTION = typing___cast(VideoOptOutType, 0)
    VIDEO_OPT_OUT_TEMPORAL = typing___cast(VideoOptOutType, 1)
    VIDEO_OPT_OUT_SPATIAL = typing___cast(VideoOptOutType, 2)
VIDEO_OPT_OUT_DETECTION = typing___cast(VideoOptOutType, 0)
VIDEO_OPT_OUT_TEMPORAL = typing___cast(VideoOptOutType, 1)
VIDEO_OPT_OUT_SPATIAL = typing___cast(VideoOptOutType, 2)

class Detection(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    start_time_millis = ... # type: int
    end_time_millis = ... # type: int

    @property
    def status(self) -> google___rpc___status_pb2___Status: ...

    @property
    def img_manip_req(self) -> ImageManipulationRequest: ...

    @property
    def vid_manip_req(self) -> VideoManipulationRequest: ...

    @property
    def img_splice_req(self) -> ImageSpliceRequest: ...

    @property
    def img_cam_match_req(self) -> ImageCameraMatchRequest: ...

    @property
    def img_manip(self) -> ImageManipulation: ...

    @property
    def vid_manip(self) -> VideoManipulation: ...

    @property
    def img_splice(self) -> ImageSplice: ...

    @property
    def img_cam_match(self) -> ImageCameraMatch: ...

    def __init__(self,
        *,
        status : typing___Optional[google___rpc___status_pb2___Status] = None,
        start_time_millis : typing___Optional[int] = None,
        end_time_millis : typing___Optional[int] = None,
        img_manip_req : typing___Optional[ImageManipulationRequest] = None,
        vid_manip_req : typing___Optional[VideoManipulationRequest] = None,
        img_splice_req : typing___Optional[ImageSpliceRequest] = None,
        img_cam_match_req : typing___Optional[ImageCameraMatchRequest] = None,
        img_manip : typing___Optional[ImageManipulation] = None,
        vid_manip : typing___Optional[VideoManipulation] = None,
        img_splice : typing___Optional[ImageSplice] = None,
        img_cam_match : typing___Optional[ImageCameraMatch] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Detection: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"img_cam_match",u"img_cam_match_req",u"img_manip",u"img_manip_req",u"img_splice",u"img_splice_req",u"request",u"response",u"status",u"vid_manip",u"vid_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"end_time_millis",u"img_cam_match",u"img_cam_match_req",u"img_manip",u"img_manip_req",u"img_splice",u"img_splice_req",u"request",u"response",u"start_time_millis",u"status",u"vid_manip",u"vid_manip_req"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"img_cam_match",b"img_cam_match",u"img_cam_match_req",b"img_cam_match_req",u"img_manip",b"img_manip",u"img_manip_req",b"img_manip_req",u"img_splice",b"img_splice",u"img_splice_req",b"img_splice_req",u"request",b"request",u"response",b"response",u"status",b"status",u"vid_manip",b"vid_manip",u"vid_manip_req",b"vid_manip_req"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"end_time_millis",b"end_time_millis",u"img_cam_match",b"img_cam_match",u"img_cam_match_req",b"img_cam_match_req",u"img_manip",b"img_manip",u"img_manip_req",b"img_manip_req",u"img_splice",b"img_splice",u"img_splice_req",b"img_splice_req",u"request",b"request",u"response",b"response",u"start_time_millis",b"start_time_millis",u"status",b"status",u"vid_manip",b"vid_manip",u"vid_manip_req",b"vid_manip_req"]) -> None: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"request",b"request"]) -> typing_extensions___Literal["img_manip_req","vid_manip_req","img_splice_req","img_cam_match_req"]: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"response",b"response"]) -> typing_extensions___Literal["img_manip","vid_manip","img_splice","img_cam_match"]: ...

class AnnotatedDetection(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id = ... # type: typing___Text
    version = ... # type: typing___Text
    analytic_id = ... # type: typing___Text

    @property
    def detection(self) -> Detection: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[typing___Text] = None,
        detection : typing___Optional[Detection] = None,
        analytic_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AnnotatedDetection: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"detection"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"analytic_id",u"detection",u"id",u"version"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"detection",b"detection"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"analytic_id",b"analytic_id",u"detection",b"detection",u"id",b"id",u"version",b"version"]) -> None: ...

class Resource(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    uri = ... # type: typing___Text
    type = ... # type: typing___Text
    notes = ... # type: typing___Text

    def __init__(self,
        *,
        uri : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        notes : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Resource: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"notes",u"type",u"uri"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"notes",b"notes",u"type",b"type",u"uri",b"uri"]) -> None: ...

class IntRange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    start = ... # type: int
    end = ... # type: int

    def __init__(self,
        *,
        start : typing___Optional[int] = None,
        end : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> IntRange: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"end",u"start"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"end",b"end",u"start",b"start"]) -> None: ...

class ScoredIntRange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    score = ... # type: float

    @property
    def range(self) -> IntRange: ...

    def __init__(self,
        *,
        range : typing___Optional[IntRange] = None,
        score : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ScoredIntRange: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"range"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"range",u"score"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"range",b"range"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"range",b"range",u"score",b"score"]) -> None: ...

class MaskIntRange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def range(self) -> IntRange: ...

    @property
    def mask(self) -> Resource: ...

    def __init__(self,
        *,
        range : typing___Optional[IntRange] = None,
        mask : typing___Optional[Resource] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> MaskIntRange: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"mask",u"range"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"mask",u"range"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"mask",b"mask",u"range",b"range"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"mask",b"mask",u"range",b"range"]) -> None: ...

class FloatRange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    start = ... # type: float
    end = ... # type: float

    def __init__(self,
        *,
        start : typing___Optional[float] = None,
        end : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FloatRange: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"end",u"start"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"end",b"end",u"start",b"start"]) -> None: ...

class ScoredFloatRange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    score = ... # type: float

    @property
    def range(self) -> FloatRange: ...

    def __init__(self,
        *,
        range : typing___Optional[FloatRange] = None,
        score : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ScoredFloatRange: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"range"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"range",u"score"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"range",b"range"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"range",b"range",u"score",b"score"]) -> None: ...

class ImageLocalization(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    mask_threshold = ... # type: float

    @property
    def mask(self) -> Resource: ...

    @property
    def mask_optout(self) -> Resource: ...

    def __init__(self,
        *,
        mask : typing___Optional[Resource] = None,
        mask_optout : typing___Optional[Resource] = None,
        mask_threshold : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageLocalization: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"mask",u"mask_optout"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"mask",u"mask_optout",u"mask_threshold"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"mask",b"mask",u"mask_optout",b"mask_optout"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"mask",b"mask",u"mask_optout",b"mask_optout",u"mask_threshold",b"mask_threshold"]) -> None: ...

class ImageManipulation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class FacetsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key = ... # type: typing___Text
        value = ... # type: float

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[float] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ImageManipulation.FacetsEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    score = ... # type: float
    confidence = ... # type: float
    has_confidence = ... # type: bool
    opt_out = ... # type: OptOutType
    explanation = ... # type: typing___Text
    specificity = ... # type: SpecificityType
    manipulation_type = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[ManipulationType]

    @property
    def facets(self) -> typing___MutableMapping[typing___Text, float]: ...

    @property
    def localization(self) -> ImageLocalization: ...

    @property
    def supplement(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Resource]: ...

    def __init__(self,
        *,
        score : typing___Optional[float] = None,
        facets : typing___Optional[typing___Mapping[typing___Text, float]] = None,
        confidence : typing___Optional[float] = None,
        has_confidence : typing___Optional[bool] = None,
        opt_out : typing___Optional[OptOutType] = None,
        explanation : typing___Optional[typing___Text] = None,
        localization : typing___Optional[ImageLocalization] = None,
        specificity : typing___Optional[SpecificityType] = None,
        manipulation_type : typing___Optional[typing___Iterable[ManipulationType]] = None,
        supplement : typing___Optional[typing___Iterable[Resource]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageManipulation: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"localization"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"confidence",u"explanation",u"facets",u"has_confidence",u"localization",u"manipulation_type",u"opt_out",u"score",u"specificity",u"supplement"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"localization",b"localization"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"confidence",b"confidence",u"explanation",b"explanation",u"facets",b"facets",u"has_confidence",b"has_confidence",u"localization",b"localization",u"manipulation_type",b"manipulation_type",u"opt_out",b"opt_out",u"score",b"score",u"specificity",b"specificity",u"supplement",b"supplement"]) -> None: ...

class ImageManipulationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    hp_device_id = ... # type: typing___Text

    @property
    def image(self) -> Resource: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        image : typing___Optional[Resource] = None,
        out_dir : typing___Optional[typing___Text] = None,
        hp_device_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageManipulationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"image"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"hp_device_id",u"image",u"out_dir",u"request_id"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"image",b"image"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"hp_device_id",b"hp_device_id",u"image",b"image",u"out_dir",b"out_dir",u"request_id",b"request_id"]) -> None: ...

class VideoLocalization(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    video_mask_threshold = ... # type: float

    @property
    def frame_detection(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ScoredIntRange]: ...

    @property
    def frame_optout(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[IntRange]: ...

    @property
    def audio_detection(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ScoredFloatRange]: ...

    @property
    def audio_optout(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[FloatRange]: ...

    @property
    def video_mask(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[MaskIntRange]: ...

    @property
    def video_mask_optout(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[MaskIntRange]: ...

    def __init__(self,
        *,
        frame_detection : typing___Optional[typing___Iterable[ScoredIntRange]] = None,
        frame_optout : typing___Optional[typing___Iterable[IntRange]] = None,
        audio_detection : typing___Optional[typing___Iterable[ScoredFloatRange]] = None,
        audio_optout : typing___Optional[typing___Iterable[FloatRange]] = None,
        video_mask : typing___Optional[typing___Iterable[MaskIntRange]] = None,
        video_mask_optout : typing___Optional[typing___Iterable[MaskIntRange]] = None,
        video_mask_threshold : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> VideoLocalization: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"audio_detection",u"audio_optout",u"frame_detection",u"frame_optout",u"video_mask",u"video_mask_optout",u"video_mask_threshold"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"audio_detection",b"audio_detection",u"audio_optout",b"audio_optout",u"frame_detection",b"frame_detection",u"frame_optout",b"frame_optout",u"video_mask",b"video_mask",u"video_mask_optout",b"video_mask_optout",u"video_mask_threshold",b"video_mask_threshold"]) -> None: ...

class VideoManipulation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class FacetsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key = ... # type: typing___Text
        value = ... # type: float

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[float] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> VideoManipulation.FacetsEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    score = ... # type: float
    confidence = ... # type: float
    has_confidence = ... # type: bool
    opt_out = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[VideoOptOutType]
    explanation = ... # type: typing___Text
    specificity = ... # type: SpecificityType
    manipulation_type = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[ManipulationType]

    @property
    def facets(self) -> typing___MutableMapping[typing___Text, float]: ...

    @property
    def localization(self) -> VideoLocalization: ...

    @property
    def supplement(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Resource]: ...

    def __init__(self,
        *,
        score : typing___Optional[float] = None,
        facets : typing___Optional[typing___Mapping[typing___Text, float]] = None,
        confidence : typing___Optional[float] = None,
        has_confidence : typing___Optional[bool] = None,
        opt_out : typing___Optional[typing___Iterable[VideoOptOutType]] = None,
        explanation : typing___Optional[typing___Text] = None,
        localization : typing___Optional[VideoLocalization] = None,
        specificity : typing___Optional[SpecificityType] = None,
        manipulation_type : typing___Optional[typing___Iterable[ManipulationType]] = None,
        supplement : typing___Optional[typing___Iterable[Resource]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> VideoManipulation: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"localization"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"confidence",u"explanation",u"facets",u"has_confidence",u"localization",u"manipulation_type",u"opt_out",u"score",u"specificity",u"supplement"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"localization",b"localization"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"confidence",b"confidence",u"explanation",b"explanation",u"facets",b"facets",u"has_confidence",b"has_confidence",u"localization",b"localization",u"manipulation_type",b"manipulation_type",u"opt_out",b"opt_out",u"score",b"score",u"specificity",b"specificity",u"supplement",b"supplement"]) -> None: ...

class VideoManipulationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    hp_device_id = ... # type: typing___Text
    keep_workspace = ... # type: bool
    skip_audio = ... # type: bool
    skip_visual = ... # type: bool
    debug_resources = ... # type: bool
    gpu_ord = ... # type: int

    @property
    def video(self) -> Resource: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        video : typing___Optional[Resource] = None,
        out_dir : typing___Optional[typing___Text] = None,
        hp_device_id : typing___Optional[typing___Text] = None,
        keep_workspace : typing___Optional[bool] = None,
        skip_audio : typing___Optional[bool] = None,
        skip_visual : typing___Optional[bool] = None,
        debug_resources : typing___Optional[bool] = None,
        gpu_ord : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> VideoManipulationRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"video"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"debug_resources",u"gpu_ord",u"hp_device_id",u"keep_workspace",u"out_dir",u"request_id",u"skip_audio",u"skip_visual",u"video"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"video",b"video"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"debug_resources",b"debug_resources",u"gpu_ord",b"gpu_ord",u"hp_device_id",b"hp_device_id",u"keep_workspace",b"keep_workspace",u"out_dir",b"out_dir",u"request_id",b"request_id",u"skip_audio",b"skip_audio",u"skip_visual",b"skip_visual",u"video",b"video"]) -> None: ...

class Link(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    from_uri = ... # type: typing___Text
    to_uri = ... # type: typing___Text
    score = ... # type: float
    confidence = ... # type: float
    has_confidence = ... # type: bool
    explanation = ... # type: typing___Text
    manipulation_type = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[ManipulationType]

    @property
    def from_mask(self) -> ImageLocalization: ...

    @property
    def to_mask(self) -> ImageLocalization: ...

    def __init__(self,
        *,
        from_uri : typing___Optional[typing___Text] = None,
        to_uri : typing___Optional[typing___Text] = None,
        score : typing___Optional[float] = None,
        confidence : typing___Optional[float] = None,
        has_confidence : typing___Optional[bool] = None,
        from_mask : typing___Optional[ImageLocalization] = None,
        to_mask : typing___Optional[ImageLocalization] = None,
        explanation : typing___Optional[typing___Text] = None,
        manipulation_type : typing___Optional[typing___Iterable[ManipulationType]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Link: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"from_mask",u"to_mask"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"confidence",u"explanation",u"from_mask",u"from_uri",u"has_confidence",u"manipulation_type",u"score",u"to_mask",u"to_uri"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"from_mask",b"from_mask",u"to_mask",b"to_mask"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"confidence",b"confidence",u"explanation",b"explanation",u"from_mask",b"from_mask",u"from_uri",b"from_uri",u"has_confidence",b"has_confidence",u"manipulation_type",b"manipulation_type",u"score",b"score",u"to_mask",b"to_mask",u"to_uri",b"to_uri"]) -> None: ...

class ImageSplice(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    opt_out = ... # type: OptOutType

    @property
    def link(self) -> Link: ...

    def __init__(self,
        *,
        opt_out : typing___Optional[OptOutType] = None,
        link : typing___Optional[Link] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageSplice: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"link"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"link",u"opt_out"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"link",b"link"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"link",b"link",u"opt_out",b"opt_out"]) -> None: ...

class ImageSpliceRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text

    @property
    def probe_image(self) -> Resource: ...

    @property
    def donor_image(self) -> Resource: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        probe_image : typing___Optional[Resource] = None,
        donor_image : typing___Optional[Resource] = None,
        out_dir : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageSpliceRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"donor_image",u"probe_image"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"donor_image",u"out_dir",u"probe_image",u"request_id"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"donor_image",b"donor_image",u"probe_image",b"probe_image"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"donor_image",b"donor_image",u"out_dir",b"out_dir",u"probe_image",b"probe_image",u"request_id",b"request_id"]) -> None: ...

class ImageCameraMatch(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    score = ... # type: float
    has_score = ... # type: bool
    explanation = ... # type: typing___Text
    has_localization = ... # type: bool

    @property
    def localization(self) -> ImageLocalization: ...

    @property
    def supplement(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Resource]: ...

    def __init__(self,
        *,
        score : typing___Optional[float] = None,
        has_score : typing___Optional[bool] = None,
        explanation : typing___Optional[typing___Text] = None,
        localization : typing___Optional[ImageLocalization] = None,
        has_localization : typing___Optional[bool] = None,
        supplement : typing___Optional[typing___Iterable[Resource]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageCameraMatch: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"localization"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"explanation",u"has_localization",u"has_score",u"localization",u"score",u"supplement"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"localization",b"localization"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"explanation",b"explanation",u"has_localization",b"has_localization",u"has_score",b"has_score",u"localization",b"localization",u"score",b"score",u"supplement",b"supplement"]) -> None: ...

class ImageCameraMatchRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_id = ... # type: typing___Text
    out_dir = ... # type: typing___Text
    camera_id = ... # type: typing___Text

    @property
    def image(self) -> Resource: ...

    def __init__(self,
        *,
        request_id : typing___Optional[typing___Text] = None,
        out_dir : typing___Optional[typing___Text] = None,
        image : typing___Optional[Resource] = None,
        camera_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImageCameraMatchRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"image"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"camera_id",u"image",u"out_dir",u"request_id"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"image",b"image"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"camera_id",b"camera_id",u"image",b"image",u"out_dir",b"out_dir",u"request_id",b"request_id"]) -> None: ...

class Empty(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Empty: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
